private DefaultHttpClient mHttpClient;
public ServerCommunication() {
    HttpParams params = new BasicHttpParams();
    params.setParameter(CoreProtocolPNames.PROTOCOL_VERSION, HttpVersion.HTTP_1_1);
    mHttpClient = new DefaultHttpClient(params);
}
public void uploadUserPhoto(File image) {
    try {
        HttpPost httppost = new HttpPost(""some url"");
        MultipartEntity multipartEntity = new MultipartEntity(HttpMultipartMode.BROWSER_COMPATIBLE);
        multipartEntity.addPart(""Title"", new StringBody(""Title""));
        multipartEntity.addPart(""Nick"", new StringBody(""Nick""));
        multipartEntity.addPart(""Email"", new StringBody(""Email""));
        multipartEntity.addPart(""Description"", new StringBody(Settings.SHARE.TEXT));
        multipartEntity.addPart(""Image"", new FileBody(image));
        httppost.setEntity(multipartEntity);
        mHttpClient.execute(httppost, new PhotoUploadResponseHandler());
    } catch (Exception e) {
        Log.e(ServerCommunication.class.getName(), e.getLocalizedMessage(), e);
    }
}
private class PhotoUploadResponseHandler implements ResponseHandler<Object> {
    @Override
    public Object handleResponse(HttpResponse response)
    throws ClientProtocolException, IOException {
        HttpEntity r_entity = response.getEntity();
        String responseString = EntityUtils.toString(r_entity);
        Log.d(""UPLOAD"", responseString);
        return null;
    }
}
